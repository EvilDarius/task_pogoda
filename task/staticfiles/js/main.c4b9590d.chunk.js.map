{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","setPeople","useEffect","axios","method","url","then","response","data","weatherData","setWeatherData","options","grid","top","right","bottom","left","xAxis","type","map","item","dateWeatherOfSummary","yAxis","series","smooth","tooltip","trigger","className","class","option","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAAe,I,oCCgEAA,MAxDf,WACE,MAA4BC,mBAAS,IAArC,mBAAeC,GAAf,WAEAC,qBAAU,WACRC,IAAM,CACJC,OAAQ,MACRC,IAAK,wCACJC,MAAK,SAAAC,GACNN,EAAUM,EAASC,WAEpB,IACH,MAAsCR,mBAAS,IAA/C,mBAAOS,EAAP,KAAoBC,EAApB,KAEAR,qBAAU,WACNC,IAAO,CACLC,OAAQ,MACRC,IAAK,uCACJC,MAAK,SAAAC,GACNG,EAAeH,EAASC,WAE5B,IAEA,IACMG,EAAU,CACdC,KAAM,CAAEC,IAAK,EAAGC,MAAO,EAAGC,OAAQ,GAAIC,KAAM,IAC5CC,MAAO,CACLC,KAAM,WACNV,KALYC,EAAYU,KAAI,SAACC,GAAD,OAAUA,EAAKC,yBAO7CC,MAAO,CACLJ,KAAM,SAERK,OAAQ,CACN,CACEf,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,MACvCU,KAAM,OACNM,QAAQ,IAGZC,QAAS,CACPC,QAAS,SAIf,OACE,sBAAKC,UAAU,MAAf,UACC,6HAEA,sBAAKC,MAAQ,UAAb,UACC,cAAC,IAAD,CAAcC,OAAQlB,IADvB,WC5CUmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c4b9590d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nimport React, { useState,useEffect, Component } from \"react\"\nimport axios from 'axios'\nimport ReactECharts from 'echarts-for-react'\n\n\nfunction App() {\n  const [people, setPeople] = useState([])\n\n  useEffect(() => {\n    axios({\n      method: \"GET\",\n      url: \"http://127.0.0.1:8000/api/test-api/\"\n    }).then(response => {\n      setPeople(response.data)\n    })\n  }, [])\n  const [weatherData, setWeatherData] = useState([])\n\n  useEffect(() => {\n      axios ({\n        method: \"GET\",\n        url: \"http://127.0.0.1:8000/api/weather/\"\n      }).then(response => {\n        setWeatherData(response.data)\n      })\n  },[])\n\n    let dataArray = weatherData.map((item) => item.dateWeatherOfSummary)\n    const options = {\n      grid: { top: 8, right: 8, bottom: 24, left: 36 },\n      xAxis: {\n        type: 'category',\n        data: dataArray,\n      },\n      yAxis: {\n        type: 'value',\n      },\n      series: [\n        {\n          data: [820, 932, 901, 934, 1290, 1330, 1320],\n          type: 'line',\n          smooth: true,\n        },\n      ],\n      tooltip: {\n        trigger: 'axis',\n      },\n    };\n\n  return (\n    <div className=\"App\">\n     <h1> Echarts графики (React + Django + Echarts + PostgreSQL)</h1>\n    \n     <div class = \"Graphic\">\n      <ReactECharts option={options} />;\n     </div>\n    </div>\n\n  );\n}\n  \nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}