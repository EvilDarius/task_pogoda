{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","props","renderItems","viewCompleted","state","weatherList","filter","item","completed","map","className","title","description","id","activeItem","dateOfWeatherSummary","atmospherePressure","humidity","a","fetch","res","json","this","setState","console","log","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAAe,I,YCsEAA,E,kDA/Db,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAuBNC,YAAc,WACZ,IAAQC,EAAkB,EAAKC,MAAvBD,cAIR,OAHiB,EAAKC,MAAMC,YAAYC,QACtC,SAAAC,GAAI,OAAIA,EAAKC,YAAcL,KAEbM,KAAI,SAAAF,GAAI,OACtB,oBAEEG,UAAU,oEAFZ,SAIE,sBACEA,UAAS,0BACP,EAAKN,MAAMD,cAAgB,oBAAsB,IAEnDQ,MAAOJ,EAAKK,YAJd,SAMKL,EAAKI,SATLJ,EAAKM,QA7BhB,EAAKT,MAAQ,CACXD,eAAe,EACfW,WAAY,CACVC,qBAAsB,GACtBC,mBAAoB,GACpBC,SAAU,IAEZZ,YAAa,IATE,E,4FAajB,8BAAAa,EAAA,+EAEsBC,MAAM,uCAF5B,cAEUC,EAFV,gBAG8BA,EAAIC,OAHlC,OAGUhB,EAHV,OAIIiB,KAAKC,SAAS,CACZlB,gBALN,kDAQImB,QAAQC,IAAR,MARJ,0D,0EAiCA,WACE,OACE,sBAAMf,UAAU,UAAhB,SACA,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,iCAAf,SACE,qBAAKA,UAAU,WAAf,SACE,oBAAIA,UAAU,8BAAd,SACGY,KAAKpB,4B,GAtDJwB,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.af22c396.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nimport React, { Component } from \"react\"\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewCompleted: false,\n      activeItem: {\n        dateOfWeatherSummary: \"\",\n        atmospherePressure: \"\",\n        humidity: \"\"\n      },\n      weatherList: []\n      };\n  }\n\n    async componentDidMount() {\n      try {\n        const res = await fetch('http://localhost:8000/api/weathers/');\n        const weatherList = await res.json();\n        this.setState({\n          weatherList\n        });\n      } catch (e) {\n        console.log(e);\n    }\n    }\n    renderItems = () => {\n      const { viewCompleted } = this.state;\n      const newItems = this.state.weatherList.filter(\n        item => item.completed === viewCompleted\n      );\n      return newItems.map(item => (\n        <li \n          key={item.id}\n          className=\"list-group-item d-flex justify-content-between align-items-center\"\n        >\n          <span \n            className={`todo-title mr-2 ${\n              this.state.viewCompleted ? \"completed-weather\" : \"\"\n            }`}\n            title={item.description}\n            >\n              {item.title}\n            </span>\n        </li>\n      ));\n    };\n\n    render() {\n      return (\n        <main className=\"content\">\n        <div className=\"row\">\n          <div className=\"col-md-6 col-sm-10 mx-auto p-0\">\n            <div className=\"card p-3\">\n              <ul className=\"list-group list-group-flush\">\n                {this.renderItems()}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </main>\n      )\n    }\n  }\n  \nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}